[gd_resource type="ShaderMaterial" load_steps=7 format=3 uid="uid://cjrv5jxfqex6j"]

[ext_resource type="Texture2D" uid="uid://bdyw0wy5oh8cd" path="res://world/rocks/rock_albedo.png" id="1_chehi"]
[ext_resource type="Texture2D" uid="uid://c1ima3b04oqde" path="res://scripts/import/default_detail_albedo.png" id="2_ccywk"]
[ext_resource type="Texture2D" uid="uid://b4tm0opg5hpgo" path="res://scripts/import/default_detail_mask.png" id="3_eb5si"]
[ext_resource type="Texture2D" uid="uid://4r2r3edal4o3" path="res://world/rocks/rock_normal.png" id="4_v4xj1"]
[ext_resource type="Texture2D" uid="uid://dtq8a4tnhbfiu" path="res://world/rocks/rock_orm.png" id="5_25yc0"]

[sub_resource type="Shader" id="Shader_doxu3"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.0.2.stable's ORMMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform sampler2D texture_orm : hint_roughness_g,filter_linear_mipmap,repeat_enable;
uniform sampler2D texture_normal : hint_roughness_normal,filter_linear_mipmap,repeat_enable;
uniform float normal_scale : hint_range(-16,16);
uniform sampler2D texture_detail_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform sampler2D texture_detail_normal : hint_normal,filter_linear_mipmap,repeat_enable;
uniform sampler2D texture_detail_mask : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}






void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	vec4 orm_tex = texture(texture_orm,base_uv);
	ROUGHNESS = orm_tex.g;
	METALLIC = orm_tex.b;
	NORMAL_MAP = texture(texture_normal,base_uv).rgb;
	NORMAL_MAP_DEPTH = normal_scale;
	vec4 detail_tex = texture(texture_detail_albedo,base_uv);
	vec4 detail_norm_tex = texture(texture_detail_normal,base_uv);
	vec4 detail_mask_tex = texture(texture_detail_mask,UV2);
	vec3 detail = mix(ALBEDO.rgb,detail_tex.rgb,detail_tex.a);
	vec3 detail_norm = mix(NORMAL_MAP,detail_norm_tex.rgb,detail_tex.a);
	NORMAL_MAP = mix(NORMAL_MAP,detail_norm,detail_mask_tex.r);
	ALBEDO.rgb = mix(ALBEDO.rgb,detail,detail_mask_tex.r);
}
"

[resource]
render_priority = 0
shader = SubResource("Shader_doxu3")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/normal_scale = 1.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("1_chehi")
shader_parameter/texture_orm = ExtResource("5_25yc0")
shader_parameter/texture_normal = ExtResource("4_v4xj1")
shader_parameter/texture_detail_albedo = ExtResource("2_ccywk")
shader_parameter/texture_detail_normal = ExtResource("4_v4xj1")
shader_parameter/texture_detail_mask = ExtResource("3_eb5si")
